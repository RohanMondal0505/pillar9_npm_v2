{"version":3,"file":"DynamicDashboard-DxR9AdsX.js","sources":["../src/pages/MultiDashboard/EditWidgetPopup.jsx","../src/pages/DynamicDashboard/Widgets.jsx","../src/pages/DynamicDashboard/DynamicDashboard.jsx"],"sourcesContent":["import * as React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { toast } from \"react-toastify\";\r\nimport { CrossButton, PlusButton } from \"../../assets/svg/SvgIndex\";\r\nimport axios from \"../../components/Hooks/axios\";\r\nimport { setOpenedDashboard } from \"../../redux/slice/dashboardSlice\";\r\nimport { setOpenLoadingPopup } from \"../../redux/slice/tempSlice\";\r\nimport styles from \"./AddWidgetPopup.module.scss\";\r\n\r\nconst EditWidgetPopup = ({ setOpenEditPopup }) => {\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst { openedDashboard } = useSelector((state) => state.dashboard);\r\n\r\n\tconst [title, setTitle] = useState(openedDashboard?.title || \"\");\r\n\tconst [selectedWidgets, setSelectedWidgets] = useState(openedDashboard?.widgets || []);\r\n\tconst [widgetButtons, setWidgetButtons] = useState([\"ListAgent\", \"Dimensions\", \"Segments\", \"Time\", \"Filter\"]);\r\n\r\n\t// Add widget to selectedWidgets\r\n\tconst handleAddWidget = (widget) => {\r\n\t\tsetSelectedWidgets((prev) => [...prev, { name: widget, isLocked: false, isCollapsed: false }]);\r\n\t};\r\n\r\n\t// Remove widget from selectedWidgets\r\n\tconst handleRemoveWidget = (widgetName) => {\r\n\t\tsetSelectedWidgets((prev) => prev.filter((widget) => widget.name !== widgetName));\r\n\t};\r\n\r\n\tconst handleSaveChanges = () => {\r\n\t\tif (!title.trim()) {\r\n\t\t\ttoast.error(\"Please provide a title for the dashboard.\");\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst layout = selectedWidgets.map((_, index) => ({\r\n\t\t\ti: `box${index + 1}`,\r\n\t\t\tx: (index % 2) * 6,\r\n\t\t\ty: Math.floor(index / 2) * 8,\r\n\t\t\tw: 6,\r\n\t\t\th: 8,\r\n\t\t}));\r\n\r\n\t\tconst payload = {\r\n\t\t\ttitle,\r\n\t\t\twidgets: selectedWidgets,\r\n\t\t\tlayout,\r\n\t\t};\r\n\r\n\t\tdispatch(setOpenLoadingPopup(true));\r\n\t\taxios\r\n\t\t\t.put(`/dashboard/update/${openedDashboard?._id}`, payload)\r\n\t\t\t.then(({ data }) => {\r\n\t\t\t\tsetOpenEditPopup(false);\r\n\t\t\t\tdispatch(setOpenedDashboard(data?.data));\r\n\t\t\t\ttoast.success(data?.message || \"Dashboard Updated Successfully...\");\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\ttoast.error(err?.response?.data?.message || \"Error Updating Dashboard.\");\r\n\t\t\t})\r\n\t\t\t.finally(() => dispatch(setOpenLoadingPopup(false)));\r\n\t};\r\n\r\n\treturn (\r\n\t\t<div className={styles.AddWidgetPopup} onClick={() => setOpenEditPopup(false)}>\r\n\t\t\t<div className={styles.Wrapper} onClick={(e) => e.stopPropagation()}>\r\n\t\t\t\t<div className={styles.Top}>\r\n\t\t\t\t\t<div className={styles.Left}>\r\n\t\t\t\t\t\t<h2>Edit Dashboard</h2>\r\n\t\t\t\t\t\t<div className={styles.InputWrapper}>\r\n\t\t\t\t\t\t\t<label htmlFor=\"\">title : </label>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tvalue={title}\r\n\t\t\t\t\t\t\t\tonChange={(e) => setTitle(e.target.value)}\r\n\t\t\t\t\t\t\t\tplaceholder=\"Enter Dashboard Title\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className={styles.Right}>\r\n\t\t\t\t\t\t<button onClick={() => setOpenEditPopup(false)}>Discard</button>\r\n\t\t\t\t\t\t<button onClick={handleSaveChanges}>Save</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t{/* Widget Buttons */}\r\n\t\t\t\t<div className={styles.WidgetButtons}>\r\n\t\t\t\t\t{widgetButtons.map((item, index) => (\r\n\t\t\t\t\t\t<div key={index} className={styles.WidgetBtn}>\r\n\t\t\t\t\t\t\t<p>{item}</p>\r\n\t\t\t\t\t\t\t{selectedWidgets.some((widget) => widget.name === item) ? (\r\n\t\t\t\t\t\t\t\t<span className={styles.CrossButton} onClick={() => handleRemoveWidget(item)}>\r\n\t\t\t\t\t\t\t\t\t<img src={CrossButton} alt=\"Remove\" title=\"Remove\" />\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t<span className={styles.Show} onClick={() => handleAddWidget(item)}>\r\n\t\t\t\t\t\t\t\t\t<img src={PlusButton} alt=\"Add\" title=\"Add\" />\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t{/* Selected Widgets */}\r\n\t\t\t\t<div className={styles.AllWidgets}>\r\n\t\t\t\t\t{selectedWidgets.map((widget, i) => (\r\n\t\t\t\t\t\t<div key={i} className={styles.WidgetBox}>\r\n\t\t\t\t\t\t\t{widget.name} Widget\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t))}\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default EditWidgetPopup;\r\n","import * as React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { BiLockAlt, BiSolidLockOpen } from \"react-icons/bi\";\r\nimport { BsLockFill, BsThreeDotsVertical } from \"react-icons/bs\";\r\nimport { RiDragDropLine } from \"react-icons/ri\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { openFullScreenPopup } from \"../../redux/slice/widgetSlice\";\r\nimport DataTable from \"../DataTable/DataTable\";\r\nimport styles from \"./DynamicDashboard.module.scss\";\r\n\r\nconst Widgets = ({ item, index, onWidgetStateChange }) => {\r\n\tconst [isCollapsed, setIsCollapsed] = useState(item.isCollapsed);\r\n\tconst [isLocked, setIsLocked] = useState(item.isLocked);\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst [openLockMenu, setOpenLockMenu] = useState(false);\r\n\r\n\tconst toggleMenu = (e) => {\r\n\t\te.stopPropagation();\r\n\t\tsetOpenLockMenu(!openLockMenu);\r\n\t};\r\n\r\n\tconst handleLockUnlock = (status) => {\r\n\t\tsetOpenLockMenu(false);\r\n\t\tsetIsLocked(status);\r\n\t\tonWidgetStateChange(index, \"isLocked\", status);\r\n\t};\r\n\r\n\tconst handleToggleCollapse = () => {\r\n\t\tsetIsCollapsed((prev) => !prev);\r\n\t\tonWidgetStateChange(index, \"isCollapsed\", !isCollapsed);\r\n\t};\r\n\r\n\tconst handleViewFullScreen = (data) => {\r\n\t\tdispatch(openFullScreenPopup(data));\r\n\t};\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className={styles.ActionButtons} onClick={() => setOpenLockMenu(false)}>\r\n\t\t\t\t<div className={styles.Left}>{item?.name}</div>\r\n\t\t\t\t<div className={styles.Right}>\r\n\t\t\t\t\t{isLocked && (\r\n\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t<BiLockAlt />\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t{!isLocked &&\r\n\t\t\t\t\t\t(isCollapsed ? (\r\n\t\t\t\t\t\t\t<span onClick={handleToggleCollapse}>UnCollapse</span>\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<span onClick={handleToggleCollapse}>Collapse</span>\r\n\t\t\t\t\t\t))}\r\n\r\n\t\t\t\t\t<span onClick={() => handleViewFullScreen(item)}>View Full Screen</span>\r\n\t\t\t\t\t{!isLocked && (\r\n\t\t\t\t\t\t<span className={`${styles.dragHandleButton} dragHandle`} style={{ cursor: \"move\" }}>\r\n\t\t\t\t\t\t\t<RiDragDropLine />\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t<span className={styles.Menu}>\r\n\t\t\t\t\t\t{/* Three-dot menu toggle */}\r\n\t\t\t\t\t\t<BsThreeDotsVertical onClick={(e) => toggleMenu(e)} />\r\n\r\n\t\t\t\t\t\t{/* Custom dropdown menu */}\r\n\t\t\t\t\t\t{openLockMenu && (\r\n\t\t\t\t\t\t\t<ul className={styles.CustomMenu}>\r\n\t\t\t\t\t\t\t\t{isLocked ? (\r\n\t\t\t\t\t\t\t\t\t<li\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleLockUnlock(false);\r\n\t\t\t\t\t\t\t\t\t\t\tsetOpenLockMenu(false);\r\n\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t<BiSolidLockOpen />\r\n\t\t\t\t\t\t\t\t\t\tUnlock\r\n\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t<li\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\t\t\t\thandleLockUnlock(true);\r\n\t\t\t\t\t\t\t\t\t\t\tsetOpenLockMenu(false);\r\n\t\t\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t\t\t<BsLockFill />\r\n\t\t\t\t\t\t\t\t\t\tLock\r\n\t\t\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</ul>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</span>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<div className={`${styles.Content} ${isCollapsed ? styles.Collapse : \"\"}`} onClick={() => setOpenLockMenu(false)}>\r\n\t\t\t\t{item?.name === \"ListAgent\" ? <DataTable /> : <p style={{ margin: \"auto\" }}>{item?.name + ` widget`}</p>}\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Widgets;\r\n","import * as React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport GridLayout from \"react-grid-layout\";\r\nimport \"react-grid-layout/css/styles.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { toast } from \"react-toastify\";\r\nimport axios from \"../../components/Hooks/axios\";\r\nimport { setOpenedDashboard } from \"../../redux/slice/dashboardSlice\";\r\nimport EditWidgetPopup from \"../MultiDashboard/EditWidgetPopup\";\r\nimport styles from \"./DynamicDashboard.module.scss\";\r\nimport Widgets from \"./Widgets\";\r\n\r\nconst DynamicDashboard = () => {\r\n\tconst dispatch = useDispatch();\r\n\tconst { openedDashboard } = useSelector((state) => state.dashboard);\r\n\tconst [openEditPopup, setOpenEditPopup] = useState(false);\r\n\tconst [showUpdateButton, setShowUpdateButton] = useState(false); //for show save layout button\r\n\tconst navigate = useNavigate();\r\n\r\n\tconst [dashboardData, setDashboardData] = useState(openedDashboard);\r\n\t//grid\r\n\tconst [gridWidth, setGridWidth] = useState(window.innerWidth * 0.8);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst updateGridWidth = () => {\r\n\t\t\tsetGridWidth(window.innerWidth * 0.8);\r\n\t\t};\r\n\r\n\t\tupdateGridWidth();\r\n\r\n\t\twindow.addEventListener(\"resize\", updateGridWidth);\r\n\t\treturn () => window.removeEventListener(\"resize\", updateGridWidth);\r\n\t}, []);\r\n\r\n\tconst defaultLayout = [\r\n\t\t{ i: \"box1\", x: 0, y: 0, w: 12, h: 8, isDraggable: true, isResizable: true },\r\n\t\t{ i: \"box2\", x: 0, y: 8, w: 6, h: 8, isDraggable: true, isResizable: true },\r\n\t\t{ i: \"box3\", x: 6, y: 8, w: 6, h: 8, isDraggable: true, isResizable: true },\r\n\t\t{ i: \"box4\", x: 0, y: 16, w: 8, h: 8, isDraggable: true, isResizable: true },\r\n\t\t{ i: \"box5\", x: 8, y: 16, w: 4, h: 8, isDraggable: true, isResizable: true },\r\n\t];\r\n\r\n\tconst [layout, setLayout] = useState(() => {\r\n\t\tconst savedLayout = openedDashboard?.layout;\r\n\t\treturn savedLayout ? savedLayout : defaultLayout;\r\n\t});\r\n\r\n\tconst handleLayoutChange = (newLayout) => {\r\n\t\tsetLayout(newLayout);\r\n\t\tsetDashboardData((prev) => ({\r\n\t\t\t...prev,\r\n\t\t\tlayout: newLayout,\r\n\t\t}));\r\n\t\tsetShowUpdateButton(true);\r\n\t};\r\n\r\n\tconst handleWidgetStateChange = (index, key, value) => {\r\n\t\tsetDashboardData((prev) => {\r\n\t\t\tconst updatedWidgets = prev.widgets.map((widget, i) => (i === index ? { ...widget, [key]: value } : { ...widget }));\r\n\r\n\t\t\t// Update layout immediately based on `isLocked`\r\n\t\t\tconst updatedLayout = layout.map((item, i) => {\r\n\t\t\t\tif (i === index && key === \"isLocked\") {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\t...item,\r\n\t\t\t\t\t\tisDraggable: !value, // Lock = not draggable\r\n\t\t\t\t\t\tisResizable: !value, // Lock = not resizable\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t\tif (i === index && key === \"isCollapsed\") {\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\t...item,\r\n\t\t\t\t\t\tisResizable: !value,\r\n\t\t\t\t\t\th: value ? 1 : 8,\r\n\t\t\t\t\t};\r\n\t\t\t\t}\r\n\t\t\t\treturn item;\r\n\t\t\t});\r\n\r\n\t\t\tsetLayout(updatedLayout);\r\n\r\n\t\t\treturn { ...prev, widgets: updatedWidgets };\r\n\t\t});\r\n\t};\r\n\r\n\tconst [updatingLayout, setUpdatingLayout] = useState(false);\r\n\tconst handleSaveLayout = () => {\r\n\t\tsetUpdatingLayout(true);\r\n\t\taxios\r\n\t\t\t.put(`/dashboard/update/${dashboardData?._id}`, {\r\n\t\t\t\ttitle: dashboardData?.title,\r\n\t\t\t\twidgets: dashboardData?.widgets,\r\n\t\t\t\tlayout: dashboardData?.layout,\r\n\t\t\t})\r\n\t\t\t.then(({ data }) => {\r\n\t\t\t\ttoast.success(data?.message || \"Dashboard Updated Successfully...\");\r\n\t\t\t\tdispatch(setOpenedDashboard(data?.data));\r\n\t\t\t\tsetShowUpdateButton(false);\r\n\t\t\t})\r\n\t\t\t.catch((err) => {\r\n\t\t\t\ttoast.error(err?.response?.data?.message || \"Error Updating Dashboard layout..\");\r\n\t\t\t})\r\n\t\t\t.finally(() => setUpdatingLayout(false));\r\n\t};\r\n\r\n\tuseEffect(() => {\r\n\t\tsetDashboardData(openedDashboard);\r\n\t\tsetLayout(openedDashboard?.layout);\r\n\t\tsetShowUpdateButton(false);\r\n\t}, [openedDashboard]);\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{openEditPopup && <EditWidgetPopup {...{ setOpenEditPopup }} />}\r\n\r\n\t\t\t<div className={styles.DynamicDashboard}>\r\n\t\t\t\t<div className={styles.Top}>\r\n\t\t\t\t\t<h1>Title : {dashboardData?.title}</h1>\r\n\r\n\t\t\t\t\t<div className={styles.Buttons}>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tonClick={() => {\r\n\t\t\t\t\t\t\t\tnavigate(\"/user/multi-dashboard\");\r\n\t\t\t\t\t\t\t\tdispatch(setOpenedDashboard({}));\r\n\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\tBack\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t<button onClick={() => setOpenEditPopup(true)}>Manage Widgets</button>\r\n\t\t\t\t\t\t{showUpdateButton && (\r\n\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t{updatingLayout ? (\r\n\t\t\t\t\t\t\t\t\t<button>Updating ....</button>\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t<button onClick={handleSaveLayout}>Save Layout</button>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className={styles.Widgets}>\r\n\t\t\t\t\t<GridLayout\r\n\t\t\t\t\t\tclassName=\"layout\"\r\n\t\t\t\t\t\tlayout={layout}\r\n\t\t\t\t\t\tcols={12}\r\n\t\t\t\t\t\trowHeight={40}\r\n\t\t\t\t\t\twidth={gridWidth}\r\n\t\t\t\t\t\tdraggableHandle=\".dragHandle\"\r\n\t\t\t\t\t\tonLayoutChange={handleLayoutChange}>\r\n\t\t\t\t\t\t{dashboardData?.widgets?.map((widget, i) => (\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tkey={`box${i + 1}`}\r\n\t\t\t\t\t\t\t\tclassName={styles.gridItem}\r\n\t\t\t\t\t\t\t\tdata-grid={{\r\n\t\t\t\t\t\t\t\t\t...layout[i],\r\n\t\t\t\t\t\t\t\t\tisDraggable: layout[i]?.isDraggable ?? true, // Default to true\r\n\t\t\t\t\t\t\t\t\tisResizable: layout[i]?.isResizable ?? true, // Default to true\r\n\t\t\t\t\t\t\t\t\tstatic: !layout[i]?.isDraggable && !layout[i]?.isResizable,\r\n\t\t\t\t\t\t\t\t}}>\r\n\t\t\t\t\t\t\t\t<Widgets item={widget} index={i} onWidgetStateChange={handleWidgetStateChange} />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</GridLayout>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default DynamicDashboard;\r\n"],"names":["EditWidgetPopup","_ref","setOpenEditPopup","dispatch","useDispatch","openedDashboard","useSelector","state","dashboard","_useState","useState","undefined","title","_useState2","_slicedToArray","setTitle","_useState3","widgets","_useState4","selectedWidgets","setSelectedWidgets","_useState5","_useState6","widgetButtons","React","createElement","className","styles","AddWidgetPopup","onClick","Wrapper","e","stopPropagation","Top","Left","InputWrapper","htmlFor","type","value","onChange","target","placeholder","Right","trim","layout","map","_","index","i","concat","x","y","Math","floor","w","h","payload","setOpenLoadingPopup","axios","put","_id","then","_ref2","data","setOpenedDashboard","toast","success","message","err","_err$response","error","response","WidgetButtons","item","key","WidgetBtn","some","widget","name","CrossButton","widgetName","prev","filter","src","alt","Show","_toConsumableArray","isLocked","isCollapsed","PlusButton","AllWidgets","WidgetBox","Widgets","onWidgetStateChange","setIsCollapsed","setIsLocked","openLockMenu","setOpenLockMenu","handleLockUnlock","status","handleToggleCollapse","Fragment","ActionButtons","BiLockAlt","openFullScreenPopup","dragHandleButton","style","cursor","RiDragDropLine","Menu","BsThreeDotsVertical","toggleMenu","CustomMenu","BiSolidLockOpen","BsLockFill","Content","Collapse","DataTable","margin","DynamicDashboard","_dashboardData$widget","openEditPopup","showUpdateButton","setShowUpdateButton","navigate","useNavigate","dashboardData","setDashboardData","_useState7","window","innerWidth","_useState8","gridWidth","setGridWidth","useEffect","updateGridWidth","addEventListener","removeEventListener","defaultLayout","isDraggable","isResizable","_useState9","savedLayout","_useState10","setLayout","handleWidgetStateChange","updatedWidgets","_objectSpread","_defineProperty","updatedLayout","_useState11","_useState12","updatingLayout","setUpdatingLayout","Buttons","GridLayout","cols","rowHeight","width","draggableHandle","onLayoutChange","newLayout","_layout$i$isDraggable","_layout$i","_layout$i$isResizable","_layout$i2","_layout$i3","_layout$i4","gridItem","static"],"mappings":"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"}